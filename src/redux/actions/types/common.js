const SUCCESS = {
    // product
    GET_PRODUCT_INFO: 'COMMON_GET_PRODUCT_INFO_SUCCESS',
    UPDATE_PRODUCT: 'COMMON_UPDATE_PRODUCT_SUCCESS',
    CREATE_PRODUCT: 'COMMON_CREATE_PRODUCT_SUCCESS',
    CREATE_PRODUCT_PICTURE: 'COMMON_CREATE_PRODUCT_PICTURE_SUCCESS',

    // category
    GET_CATEGORIES: 'COMMON_GET_CATEGORIES_LIST_SUCCESS',

    // file
    GET_FILE: 'COMMON_GET_FILE_SUCCESS',
    CREATE_FILE: 'COMMON_CREATE_FILE_SUCCESS',
    UPDATE_FILE: 'COMMON_UPDATE_FILE_SUCCESS',

    // certificate
    GET_CERTIFICATES: 'COMMON_GET_CERTIFICATE_LIST_BY_PARENT_ID_SUCCESS',
    CREATE_OBJECT_CERTIFICATE: 'COMMON_CREATE_OBJECT_CERTIFICATE_SUCCESS',

    // hashTag
    GET_HASH_TAGS: 'COMMON_GET_HASH_TAGS_SUCCESS',
    // CREATE_HASH_TAG_FOR: 'COMMON_CREATE_HASH_TAG_FOR_SUCCESS', // not used yet. but maybe used in future.

    // location
    GET_PROVINCES: 'COMMON_GET_PROVINCES_SUCCESS',
    GET_COUNTRIES: 'COMMON_GET_COUNTRIES_SUCCESS',
    GET_CITIES: 'COMMON_GET_CITIES_SUCCESS',

    // badge
    GET_USER_BADGES: "GET_USER_BADGES_SUCCESS",
    GET_ORG_BADGES: "GET_ORG_BADGES_SUCCESS",
    SET_BADGES_IN_USER: "SET_BADGES_IN_USER_SUCCESS",
    SET_BADGES_IN_ORG: "SET_BADGES_IN_ORG_SUCCESS"
}

const ERROR = {
    // product
    GET_PRODUCT_INFO: 'COMMON_GET_PRODUCT_INFO_ERROR',
    UPDATE_PRODUCT: 'COMMON_UPDATE_PRODUCT_ERROR',
    CREATE_PRODUCT: 'COMMON_CREATE_PRODUCT_ERROR',
    CREATE_PRODUCT_PICTURE: 'COMMON_CREATE_PRODUCT_PICTURE_ERROR',

    // category
    GET_CATEGORIES: 'COMMON_GET_CATEGORIES_LIST_ERROR',

    // file
    GET_FILE: 'COMMON_GET_FILE_ERROR',
    CREATE_FILE: 'COMMON_CREATE_FILE_ERROR',
    UPDATE_FILE: 'COMMON_UPDATE_FILE_ERROR',

    // certificate
    GET_CERTIFICATES: 'COMMON_GET_CERTIFICATE_LIST_BY_PARENT_ID_ERROR',
    CREATE_OBJECT_CERTIFICATE: 'COMMON_CREATE_OBJECT_CERTIFICATE_ERROR',

    // hashTag
    GET_HASH_TAGS: 'COMMON_GET_HASH_TAGS_ERROR',
    CREATE_HASH_TAG_FOR: 'COMMON_CREATE_HASH_TAG_FOR_ERROR',

    // location
    GET_PROVINCES: 'COMMON_GET_PROVINCES_ERROR',
    GET_COUNTRIES: 'COMMON_GET_COUNTRIES_ERROR',
    GET_CITIES: 'COMMON_GET_CITIES_ERROR',

    // badge
    GET_USER_BADGES: "GET_USER_BADGES_ERROR",
    GET_ORG_BADGES: "GET_ORG_BADGES_ERROR",
    SET_BADGES_IN_USER: "SET_BADGES_IN_USER_ERROR",
    SET_BADGES_IN_ORG: "SET_BADGES_IN_ORG_ERROR"
}

const BASE = {
    // product
    GET_PRODUCT_INFO: 'COMMON_GET_PRODUCT_INFO_REQUEST',
    UPDATE_PRODUCT: 'COMMON_UPDATE_PRODUCT_REQUEST',
    CREATE_PRODUCT: 'COMMON_CREATE_PRODUCT_REQUEST',
    CREATE_PRODUCT_PICTURE: 'COMMON_CREATE_PRODUCT_PICTURE_REQUEST',
    ADD_PICTURE_ID_TO_PRODUCT: 'COMMON_ADD_PICTURE_ID_TO_PRODUCT_REQUEST',
    // put the above type to add an id in the list of
    // a specific product's pictures.
    // (id ===> state.common.product.products[idOfSpecificProduct]: [...prevList, id]
    ADD_HASH_TAG_ID_TO_PRODUCT: 'COMMON_ADD_HASH_TAG_ID_TO_PRODUCT_REQUEST',
    SET_NOW_CREATED_PRODUCT_TO_NULL: 'COMMON_SET_NEW_CREATED_PRODUCT_TO_NULL_REQUEST',

    // category
    GET_CATEGORIES: 'COMMON_GET_CATEGORIES_LIST_REQUEST',

    // file
    GET_FILE: 'COMMON_GET_FILE',
    CREATE_FILE: 'COMMON_CREATE_FILE_REQUEST',
    UPDATE_FILE: 'COMMON_UPDATE_FILE_REQUEST',
    DEL_MIDDLEWARE_FILE_DATA: 'COMMON_DELETE_MIDDLEWARE_FILE_DATA_REQUEST',

    // certificate
    GET_CERTIFICATES: 'COMMON_GET_CERTIFICATE_LIST_BY_PARENT_ID_REQUEST',
    CREATE_OBJECT_CERTIFICATE: 'COMMON_CREATE_OBJECT_CERTIFICATE_REQUEST',
    RESET_CREATE_CERTIFICATE_STATUS: 'COMMON_RESET_CREATE_CERTIFICATE_STATUS_REQUEST',

    // hashTag
    GET_HASH_TAGS: 'COMMON_GET_HASH_TAGS_REQUEST',
    CREATE_HASH_TAG_FOR: 'COMMON_CREATE_HASH_TAG_FOR_REQUEST',

    // location
    GET_COUNTRIES: 'COMMON__GET__COUNTRIES__REQUEST',
    GET_PROVINCES: 'COMMON__GET__PROVINCES__REQUEST',
    GET_CITIES: 'COMMON__GET__CITIES__REQUEST',

    // badge
    GET_USER_BADGES: "GET_USER_BADGES",
    GET_ORG_BADGES: "GET_ORG_BADGES",
    SET_BADGES_IN_USER: "SET_BADGES_IN_USER",
    SET_BADGES_IN_ORG: "SET_BADGES_IN_ORG"
}

export default {
  SUCCESS,
  ERROR,
  BASE
}